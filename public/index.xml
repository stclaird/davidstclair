<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David StClair</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on David StClair</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Feb 2022 23:28:38 +0100</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Nature Pond in the UK</title>
      <link>http://localhost:1313/posts/building-a-nature-pond-uk/</link>
      <pubDate>Wed, 09 Feb 2022 23:28:38 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/building-a-nature-pond-uk/</guid>
      <description>Mankind has all but won the war on nature. Species are in retreat all over the world and here in the UK the situation is no different.
However, although the outlook for nature looks a bit bleak, all is not lost and there is one direct and simple action that you can take to help call a truce with nature and that is to dig a pond in your garden.</description>
    </item>
    
    <item>
      <title>Setting up an AWS EC2 Auto-scaler and performing a simple scaling up event.</title>
      <link>http://localhost:1313/posts/setting-up-aws-autoscaler/</link>
      <pubDate>Fri, 15 Dec 2017 15:28:38 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/setting-up-aws-autoscaler/</guid>
      <description>AWS auto-scalers, to me at least, are the service that standout as being one of the most “Elastic-y” in the Elastic offerings from AWS. They can be configured to automatically expand and shrink on demand. Which by most definitions is pretty elastic.
Auto-scalers can be configured to fire up more ec2 compute instances when demand on already running instance(s) reaches a user definable threshold. For example if you have a group of ec2 compute instances working on a queue of jobs and that queue is keeping all of the server&amp;rsquo;s processor tied up consistently for say, 10 minutes the auto-scaler will detect this and launch up another ec2 instance.</description>
    </item>
    
    <item>
      <title>Delete Pyrax Cloud Block Storage Volumes Snapshots Older than N days</title>
      <link>http://localhost:1313/posts/delete-pyrax-cloud-blockstorage/</link>
      <pubDate>Thu, 17 Dec 2015 23:28:38 +0100</pubDate>
      
      <guid>http://localhost:1313/posts/delete-pyrax-cloud-blockstorage/</guid>
      <description>If you find yourself with a lot of rackspace cloud volumes you need to remove, you can do this manually or you can run a simple python script.
This very simple example shows you how to delete snapshots taken of rackspace cloud volumes older than N days. In this example N days will be 7 days.
This example makes the following assumptions:
you have a Pyrax installed you have your Rackspace API credentials key.</description>
    </item>
    
  </channel>
</rss>
